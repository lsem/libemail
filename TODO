1) parse rfc headers and bodies with gmime.
2) write a program which can display a list of items in UI with email subjects (decoded unicode and flags). QT can be used I guess or cmdline.
3) handle threads by using References and In-Reply-To (https://stackoverflow.com/questions/45690336/do-all-email-clients-use-in-reply-to-field-in-email-header)
4) Employ timeouts for all operations on imap client. So any commmand we issue to the server can be timed out. Think about deadlines instead of timeouts. Before any release all operations should be constrained by timeout with descent handling.
5) Write unit tests for application. Similarly how appcore has unit tests, before going into production, we should have descent unit tests coverege. if we can write 3 unit tests a day, then 10 total days (30 evenings) can be devoted to write 30 main unit tests for the app. This would require controlling time and maybe some framework.
6) Feature: emails list (inlcuding for parent folders).
7) Feature: custom folders and drag-and-drop. -- DONE.
8) Feature: save and restore of user folders -- DONE.
10) Feature: downloading all emails from the server into separate folders:
     [Friends]
         [combdn@gmail.com]
     [Inbox]
     [Archive]
     [Sent]
     [Drafts]
     
11) Mainwindow responsible for creating qmenu which encodes tree. It should be listening for
   changes in a tree and rebuild menu on change. Then, this menu will be set into tree_view.
9) Pulling data from server.
